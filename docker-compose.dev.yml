version: '3.3'

services:
  client-dev:
    env_file: .env.dev.example
    container_name: client-dev
    build:
      context: ./client
      dockerfile: Dockerfile.client.dev
    image: client-img-dev
    volumes:
      - ./client/src:/app-client/src
      - ./client/public:/app-client/public
      - ./client/package.json:/app-client/package.json:rw
      - ./client/package-lock.json:/app-client/package-lock.json:rw
      - ./client/vite.config.ts:/app-client/vite.config.ts:rw
      - ./client/index.html:/app-client/index.html:rw
      - ./client/tsconfig.app.json:/app-client/tsconfig.app.json:rw
      - ./client/tsconfig.node.json:/app-client/tsconfig.node.json:rw
      - ./client/tsconfig.json:/app-client/tsconfig.json:rw
      - ./client/tailwind.config.js:/app-client/tailwind.config.js:rw
      - ./client/postcss.config.js:/app-client/postcss.config.js:rw
      - ./client/components.json:/app-client/components.json:rw
    command: npm run dev
    ports:
      - 80:8080
    depends_on:
      - server-dev
    restart: "no"

  server-dev:
    env_file: .env.dev.example
    container_name: server-dev
    build:
      context: ./server
      dockerfile: Dockerfile.server.dev
    image: server-img-dev
    volumes:
      - ./server/src:/app-server/src
      - ./server/package.json:/app-server/package.json:rw
      - ./server/package-lock.json:/app-server/package-lock.json:rw
    command: npm run dev
    ports:
      - 3030:3030
    depends_on:
      - mongodb-dev
    restart: on-failure
  
  mongodb-dev:
    env_file: .env.dev.example
    container_name: mongodb-dev
    image: mongo:latest
    volumes:
      - mongodb-data-v2:/data/db
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro  # create user <--
    ports:
      - 27017:27017
    restart: on-failure

volumes:
    mongodb-data-v2:
